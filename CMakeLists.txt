CMAKE_MINIMUM_REQUIRED(VERSION 3.18)

PROJECT( ufalgo )
ADD_EXECUTABLE( ${PROJECT_NAME} )

IF( NOT CMAKE_BUILD_TYPE )
    SET( CMAKE_BUILD_TYPE DEBUG )
ENDIF()

IF(PCH_OFF)
    message(STATUS "Precompiled header is ON")
ENDIF()

TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME}
PRIVATE
    "${CMAKE_CURRENT_SOURCE_DIR}/includes"
)

IF(PCH_OFF)
    target_precompile_headers( ${PROJECT_NAME}
    PRIVATE
        "$<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/includes/union_find.hpp>"
    )
ENDIF()

SET( SOURCE_PATH "src" )

SET( TESTING_SOURCE_PATH test )
SET( CMAKE_CXX_STANDARD 11 )
SET( CMAKE_CXX_STANDARD_REQUIRED ON )
SET( CMAKE_CXX_EXTENSIONS OFF )

SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic-errors -Wall " )

SET( CMAKE_CXX_FLAGS_RELEASE "-O1" )

TARGET_SOURCES( ${PROJECT_NAME}
PRIVATE
    ${SOURCE_PATH}/main.cpp
    ${SOURCE_PATH}/union_find.cpp
)



TARGET_LINK_LIBRARIES(
    ${PROJECT_NAME}
)
